db.products.insertOne({name: 'pc', price: 1299.33, details: {cpu: '899', memory: '12gb'}});
db.flightData.insertMany([
  {
    "departureAirport": "MUC",
    "arrivalAirport": "SFO",
    "aircraft": "Airbus A380",
    "distance": 12000,
    "intercontinental": true
  },
  {
    "departureAirport": "LHR",
    "arrivalAirport": "TXL",
    "aircraft": "Airbus A320",
    "distance": 950,
    "intercontinental": false
  }
]);

db.flightData.updateMany({}, {$set:{ deletInd: false}});
db.flightData.find().pretty();
db.flightData.find({ intercontinental: false}).pretty();
db.flightData.find({ distance: {$gt:10000}}).pretty();

db.flightData.updateOne({_id: ObjectId("5c391374a133542f6404b8ff")}, {$set:{ delayed: true}});
db.flightData.update({_id: ObjectId("5c391374a133542f6404b8ff")}, {$set:{ delayed: true, aircraft: 'Boeing 777'}});
db.flightData.replaceOne({_id: ObjectId("5c391374a133542f6404b8ff")},
                        {  "departureAirport": "MUC",
                           "arrivalAirport": "SFO",
                           "distance": 12000,
                           "aircraft": "Airbus A380",
                           "intercontinental": true});
db.flightData.find().forEach((data)=>{ printjson(data) });
db.flightData.find().toArray();
include only data distance and aircraft exclude _id
db.flightData.find({}, {distance: 1, _id: 0, aircraft: 1});

db.flightData.updateOne({_id: ObjectId("5c391374a133542f6404b8ff")},
      {$set:{ status:{ time: 'now', onTime: false}}});


db.flightData.updateOne({_id: ObjectId("5c391374a133542f6404b8ff")},
      {$set:{ stops:[{ city: 'Dallas', seq: 0}, { city: 'Pittsburg', seq: 1}]}});

