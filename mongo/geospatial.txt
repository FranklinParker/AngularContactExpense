db.places.insertOne({name: 'Elk Glen Picnic Area Golden Gate Park  SF',
                       location: {type: 'Point', coordinates: [-122.4828706,37.7675373]}});

db.places.insertOne({name: 'East Meadow Area Golden Gate Park  SF',
                       location: {type: 'Point', coordinates: [-122.4834538,37.7700403]}});


db.places.insertOne({name: 'The Golden Gate Angling & Casting Club Golden Gate Park  SF',
                       location: {type: 'Point', coordinates: [-122.4955082,37.7670657]}});


db.places.insertOne({name: 'Golden Gate Park Golf Course Golden Gate Park  SF',
                       location: {type: 'Point', coordinates: [-122.5044581,37.7691208]}});



 db.places.find( {   location: {
           $near: {
             $geometry: {
                type: "Point" ,
                coordinates: [ -122.4991253,37.77132]
             },
             $maxDistance: 2000,
             $minDistance: 10
           }
         }});



db.places.createIndex({location :'2dsphere'});

const point1 = [ -122.51071,37.77135]

const point2 = [ -122.45503,37.77454]
const point3 = [  -122.45312,37.7664]


const point4 = [ -122.50883,37.76396]

db.places.find( {   location: {
           $geoWithin: {
             $geometry: {
                type: "Polygon" ,
                coordinates: [ [point1,point2,point3,point4,point1]]
             }
           }
         }});
db.areas.insertOne({ name: 'Golden Gate Park', area: { type: "Polygon" ,
                   coordinates: [ [point1,point2,point3,point4,point1]]}});
db.areas.createIndex({area :'2dsphere'});

db.areas.find({ area:{
      $geoIntersects: {
        $geometry: {
           type: "Point" ,
           coordinates: [ -122.4991253,37.77132]
        }
     }}});

db.places.find( {
  location: { $geoWithin: { $centerSphere: [ [ -122.4991253,37.77132 ], 1 / 6378.1] } }
} );


Assignment

1) Add three points

db.places.insertOne({name: 'Museum of the City of New York',
                       location: {type: 'Point', coordinates: [-73.9543099,40.7935794]}});
db.places.insertOne({name: 'Lasker Rink Central Park Ny',
                       location: {type: 'Point', coordinates: [-74.0059728,40.7127753]}});
db.places.insertOne({name: 'Daniel Webster Monument  Central Park Ny ',
                       location: {type: 'Point', coordinates: [-73.9827839,40.7760812]}});
2) Query to see which points are near another point

db.places.find( {   location: {
           $near: {
             $geometry: {
                type: "Point" ,
                coordinates: [ -73.9827839,40.7760812]
             },
             $maxDistance: 2000,
             $minDistance: 10
           }
         }}).pretty();
3) Pick an area and see what points are in that area
const cp1 = [  -73.95807, 40.80023];
const cp2 = [ -73.94928,40.79728];
const cp3 = [ -73.97296,40.76435];
const cp4 = [  -73.98152,40.76828];

db.places.find( {   location: {
           $geoWithin: {
             $geometry: {
                type: "Polygon" ,
                coordinates: [ [cp1, cp2,cp3,cp4,cp1]]
             }
           }
         }});
4) store an area in a collection

db.areas.insertOne({ name: 'Central Park NY', area: { type: "Polygon" ,
                   coordinates: [ [cp1,cp2,cp3,cp4,cp1]]}});

5) pick a point and find out what areas contain that point

db.areas.find({ area:{
      $geoIntersects: {
        $geometry: {
           type: "Point" ,
           coordinates: [ -73.967744,40.779594]
        }
     }}});

     ,


